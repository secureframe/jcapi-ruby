=begin
#JumpCloud APIs

#JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for JCAPIv2::SystemInsightsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SystemInsightsApi' do
  before do
    # run before each test
    @instance = JCAPIv2::SystemInsightsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SystemInsightsApi' do
    it 'should create an instance of SystemInsightsApi' do
      expect(@instance).to be_instance_of(JCAPIv2::SystemInsightsApi)
    end
  end

  # unit tests for get_systeminsights_alf
  # List System Insights ALF
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;global_state&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsAlf>]
  describe 'get_systeminsights_alf test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_alf_exceptions
  # List System Insights ALF Exceptions
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;state&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsAlfExceptions>]
  describe 'get_systeminsights_alf_exceptions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_alf_explicit_auths
  # List System Insights ALF Explicit Authentications
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;process&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsAlfExplicitAuths>]
  describe 'get_systeminsights_alf_explicit_auths test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_appcompat_shims
  # List System Insights Application Compatibility Shims
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;enabled&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsAppcompatShims>]
  describe 'get_systeminsights_appcompat_shims test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_apps
  # List System Insights Apps
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;bundle_name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsApps>]
  describe 'get_systeminsights_apps test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_authorized_keys
  # List System Insights Authorized Keys
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;uid&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsAuthorizedKeys>]
  describe 'get_systeminsights_authorized_keys test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_battery
  # List System Insights Battery
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;health&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsBattery>]
  describe 'get_systeminsights_battery test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_bitlocker_info
  # List System Insights Bitlocker Info
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;protection_status&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsBitlockerInfo>]
  describe 'get_systeminsights_bitlocker_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_browser_plugins
  # List System Insights Browser Plugins
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsBrowserPlugins>]
  describe 'get_systeminsights_browser_plugins test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_certificates
  # List System Insights Certificates
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;common_name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsCertificates>]
  describe 'get_systeminsights_certificates test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_chrome_extensions
  # List System Insights Chrome Extensions
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsChromeExtensions>]
  describe 'get_systeminsights_chrome_extensions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_connectivity
  # List System Insights Connectivity
  # The only valid filter field is &#x60;system_id&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsConnectivity>]
  describe 'get_systeminsights_connectivity test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_crashes
  # List System Insights Crashes
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;identifier&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsCrashes>]
  describe 'get_systeminsights_crashes test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_cups_destinations
  # List System Insights CUPS Destinations
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsCupsDestinations>]
  describe 'get_systeminsights_cups_destinations test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_disk_encryption
  # List System Insights Disk Encryption
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;encryption_status&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsDiskEncryption>]
  describe 'get_systeminsights_disk_encryption test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_disk_info
  # List System Insights Disk Info
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;disk_index&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsDiskInfo>]
  describe 'get_systeminsights_disk_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_dns_resolvers
  # List System Insights DNS Resolvers
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;type&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsDnsResolvers>]
  describe 'get_systeminsights_dns_resolvers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_etc_hosts
  # List System Insights Etc Hosts
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;address&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsEtcHosts>]
  describe 'get_systeminsights_etc_hosts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_firefox_addons
  # List System Insights Firefox Addons
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsFirefoxAddons>]
  describe 'get_systeminsights_firefox_addons test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_groups
  # List System Insights Groups
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;groupname&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsGroups>]
  describe 'get_systeminsights_groups test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_ie_extensions
  # List System Insights IE Extensions
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsIeExtensions>]
  describe 'get_systeminsights_ie_extensions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_interface_addresses
  # List System Insights Interface Addresses
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;address&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsInterfaceAddresses>]
  describe 'get_systeminsights_interface_addresses test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_interface_details
  # List System Insights Interface Details
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;interface&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsInterfaceDetails>]
  describe 'get_systeminsights_interface_details test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_kernel_info
  # List System Insights Kernel Info
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;version&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsKernelInfo>]
  describe 'get_systeminsights_kernel_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_launchd
  # List System Insights Launchd
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsLaunchd>]
  describe 'get_systeminsights_launchd test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_logged_in_users
  # List System Insights Logged-In Users
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;user&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsLoggedInUsers>]
  describe 'get_systeminsights_logged_in_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_logical_drives
  # List System Insights Logical Drives
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;device_id&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsLogicalDrives>]
  describe 'get_systeminsights_logical_drives test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_managed_policies
  # List System Insights Managed Policies
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;domain&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsManagedPolicies>]
  describe 'get_systeminsights_managed_policies test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_mounts
  # List System Insights Mounts
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;path&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsMounts>]
  describe 'get_systeminsights_mounts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_os_version
  # List System Insights OS Version
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;version&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsOsVersion>]
  describe 'get_systeminsights_os_version test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_patches
  # List System Insights Patches
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;hotfix_id&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsPatches>]
  describe 'get_systeminsights_patches test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_programs
  # List System Insights Programs
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsPrograms>]
  describe 'get_systeminsights_programs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_python_packages
  # List System Insights Python Packages
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsPythonPackages>]
  describe 'get_systeminsights_python_packages test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_safari_extensions
  # List System Insights Safari Extensions
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsSafariExtensions>]
  describe 'get_systeminsights_safari_extensions test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_scheduled_tasks
  # List System Insights Scheduled Tasks
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;enabled&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsScheduledTasks>]
  describe 'get_systeminsights_scheduled_tasks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_services
  # List System Insights Services
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsServices>]
  describe 'get_systeminsights_services test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_shadow
  # LIst System Insights Shadow
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;username&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsShadow>]
  describe 'get_systeminsights_shadow test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_shared_folders
  # List System Insights Shared Folders
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsSharedFolders>]
  describe 'get_systeminsights_shared_folders test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_shared_resources
  # List System Insights Shared Resources
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;type&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsSharedResources>]
  describe 'get_systeminsights_shared_resources test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_sharing_preferences
  # List System Insights Sharing Preferences
  # Only valid filed field is &#x60;system_id&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsSharingPreferences>]
  describe 'get_systeminsights_sharing_preferences test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_sip_config
  # List System Insights SIP Config
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;enabled&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsSipConfig>]
  describe 'get_systeminsights_sip_config test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_startup_items
  # List System Insights Startup Items
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsStartupItems>]
  describe 'get_systeminsights_startup_items test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_system_controls
  # List System Insights System Control
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsSystemControls>]
  describe 'get_systeminsights_system_controls test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_system_info
  # List System Insights System Info
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;cpu_subtype&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsSystemInfo>]
  describe 'get_systeminsights_system_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_uptime
  # List System Insights Uptime
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;days&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsUptime>]
  describe 'get_systeminsights_uptime test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_usb_devices
  # List System Insights USB Devices
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;model&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsUsbDevices>]
  describe 'get_systeminsights_usb_devices test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_user_groups
  # List System Insights User Groups
  # Only valid filter field is &#x60;system_id&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsUserGroups>]
  describe 'get_systeminsights_user_groups test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_user_ssh_keys
  # List System Insights User SSH Keys
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;uid&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsUserSshKeys>]
  describe 'get_systeminsights_user_ssh_keys test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_users
  # List System Insights Users
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;username&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsUsers>]
  describe 'get_systeminsights_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_wifi_networks
  # List System Insights WiFi Networks
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;security_type&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsWifiNetworks>]
  describe 'get_systeminsights_wifi_networks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_wifi_status
  # List System Insights WiFi Status
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;security_type&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsWifiStatus>]
  describe 'get_systeminsights_wifi_status test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_systeminsights_windows_security_products
  # List System Insights Windows Security Products
  # Valid filter fields are &#x60;system_id&#x60; and &#x60;state&#x60;.
  # @param accept 
  # @param content_type 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The offset into the records to return.
  # @option opts [Array<String>] :sort The comma separated fields used to sort the collection. Default sort is ascending, prefix with &#x60;-&#x60; to sort descending. 
  # @option opts [Array<String>] :filter Supported operators are: eq
  # @option opts [Integer] :limit 
  # @option opts [String] :x_org_id 
  # @return [Array<SystemInsightsWindowsSecurityProducts>]
  describe 'get_systeminsights_windows_security_products test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
